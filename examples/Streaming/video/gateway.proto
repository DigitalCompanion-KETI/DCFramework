syntax = "proto3";

package pb;

service Gateway {
  rpc Invoke(InvokeServiceRequest) returns(Message) {}
  rpc List(Empty) returns(Functions) {}
  rpc Deploy(CreateFunctionRequest) returns(Message) {}
  rpc Delete(DeleteFunctionRequest) returns(Message) {}
  rpc Update(CreateFunctionRequest) returns(Message) {}
  rpc GetMeta(FunctionRequest) returns(Function) {}
  rpc GetLog(FunctionRequest) returns(Message) {}
  rpc ReplicaUpdate(ScaleServiceRequest) returns(Message) {}
  rpc Info(Empty) returns(Message) {}
  rpc HealthCheck(Empty) returns(Message) {}

  //stream
  rpc Invokes(stream InvokeServiceRequest) returns (stream Messages) {}
}

message Empty {}

message Message {
  string Msg = 1;
}

message Messages{
  bytes Output = 1;
}

message CreateFunctionRequest {
  string Service = 1;
  string Image = 2;
  map<string, string> EnvVars = 3;
  map<string, string> Labels = 4;
  map<string, string> Annotations = 5;
  repeated string Constraints = 6;
  repeated string Secrets = 7;
  string RegistryAuth = 8;
  FunctionResources Limits = 9;
  FunctionResources Requests = 10;
}

message DeleteFunctionRequest {
  string FunctionName = 1;
}

message ScaleServiceRequest {
  string ServiceName = 1;
  uint64 Replicas = 2;
}

message InvokeServiceRequest {
  string Service = 1;
  bytes Input = 2;
}

message FunctionRequest {
  string FunctionName = 1;
}

message Functions {
  repeated Function Functions = 1;
}

message Function {
  string Name = 1;
  string Image = 2;
  uint64 InvocationCount = 3;
  uint64 Replicas = 4;
  uint64 AvailableReplicas = 5;
  map<string, string> Annotations= 6;
  map<string, string> Labels = 7;
}

message FunctionResources {
  string Memory = 1;
  string CPU = 2;
  string GPU = 3;
}
